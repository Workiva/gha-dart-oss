on:
  workflow_call:
    inputs:
      package-path:
        description: The path to the package to run checks on
        default: '.'
        type: string

      additional-checks:
        description: >
          Any commands to run along with the hardcoded defaults. Enter multiple
          commands on different lines. Failure conditions are based on if any
          provided command results in a non-zero exit code, OR modifies the source.
        type: string

      format-check:
        description: >
          Whether or not to execute the format check. This is provided
          as a separate input to allow for running this checks workflow
          using different sdk versions, in a matrix.
        default: true
        type: boolean

      sdk:
        description: See https://github.com/dart-lang/setup-dart
        default: 2.19.6
        type: string

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}

      - working-directory: ${{ inputs.package-path }}
        run: dart pub get

      - working-directory: ${{ inputs.package-path }}
        run: |
          if (grep -q "^  dart_dev:" pubspec.yaml); then
            dart run dart_dev analyze
          else
            dart analyze .
          fi

  format:
    runs-on: ubuntu-latest
    if: ${{ inputs.format-check}}
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}
      - name: Run format
        working-directory: ${{ inputs.package-path }}
        run: |
          if (grep -q "^  dart_dev:" pubspec.yaml); then
            dart run dart_dev format --check
          else
            dart format --output=none --set-exit-if-changed .
          fi

  dependency-validator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}

      - name: Install Dependency Validator
        run: dart pub global activate dependency_validator ^4.1.0

      - name: Install Package Dependencies
        working-directory: ${{ inputs.package-path }}
        run: dart pub get

      - name: Run Dependency Validator
        working-directory: ${{ inputs.package-path }}
        run: dart pub global run dependency_validator

  check-release-notes:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
      - id: should-skip
        uses: actions/github-script@v7
        with:
          script: |
            const prAuthor = context.payload.pull_request.user.login;
            const skippedAuthors = [
              'rmconsole-readonly-wk', 
              /rmconsole\d?-(wf|wk)/,  
              'sourcegraph-wk', 
              'wk-gh-actions-wk',
              /dependabot\[bot\]/,
            ];
            if (skippedAuthors.some((author) => prAuthor.match(author))) {
              core.info(`PR author (${prAuthor}) is found in the list of skipped authors. Skipping release notes check`)
              core.setOutput('skip', 'true')
              return;
            }

            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const skipLabel = 'ignore release notes'
            const includesSkipLabel = pr.labels
              .map(label => label.name.toLowerCase())
              .includes(skipLabel);

            if (includesSkipLabel) {
              core.info(`PR contains skip label '${skipLabel}'. Skipping release notes check`)
              core.setOutput('skip', 'true')
              return;
            }

            core.setOutput('skip', 'false')

      - if: ${{ steps.should-skip.outputs.skip == 'false' }}
        uses: dorny/paths-filter@v2.11.1
        id: has-changes
        with:
          working-directory: ${{ inputs.package-path }}
          filters: |
            changelog:
              - 'CHANGELOG.md'
              
       # Note: if a changelog.md file doesn't exist in the repo this check will also be skipped
      - if: ${{ steps.has-changes.outputs.changelog == 'false' }}
        run: |
          echo "::error::No changes to CHANGELOG.md detected."
          echo "::error::Add a new entry to the 'Unreleased' section, or add an 'ignore release notes' label to this PR"
          exit 1

  analyze-additional-checks:
    runs-on: ubuntu-latest
    if: inputs.additional-checks != ''
    outputs:
      checks: ${{ steps.analyze.outputs.checks }}
    steps:
      - name: Analyze Checks
        id: analyze
        run: |
          checks=$(cat <<-END
          ${{ inputs.additional-checks }}
          END)
          checks_json=$(echo "$checks" | jq -R . | jq -scM .)
          echo "checks=$checks_json" >> $GITHUB_OUTPUT

  additional-checks:
    runs-on: ubuntu-latest
    needs: analyze-additional-checks
    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJson(needs.analyze-additional-checks.outputs.checks) }}
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}

      - name: Install Package Dependencies
        working-directory: ${{ inputs.package-path }}
        run: dart pub get

      - name: Run '${{ matrix.check }}'
        run: ${{ matrix.check }}
        working-directory: ${{ inputs.package-path }}

      - name: Check for source changes
        run: |
          git diff --quiet -- . ':(exclude)**pubspec.lock' || {
            echo "::error::The '${{ matrix.check }}' failed with source changes"
            git --no-pager diff -- . ':(exclude)**pubspec.lock'
            exit 1
          }


